import {HexCode, HexCodeColorMap, RGBColorMap} from "renderer/utils/colorUtils";

/* Color System */
// must consistent with color-system.scss
export const BLACK: HexCode = "#000";
export const WHITE: HexCode = "#fff";
export const PRIMARY: HexCodeColorMap = {
  "400": "#858ef2",
  "500": "#666bcc",
  "600": "#4c4f75",
  "700": "#393b54",
  "750": "#30324a",
  "800": "#282a42",
  "900": "#1f2133",
};
export const PRIMARY_RGB: RGBColorMap = {
  "400": [133, 142, 242],
  "500": [102, 107, 204],
  "600": [76, 79, 117],
  "700": [57, 59, 84],
  "750": [48, 50, 74],
  "800": [40, 42, 66],
  "900": [31, 33, 51],
};
export const GRAY: HexCodeColorMap = {
  "400": "#b9b9b9",
  "500": "#707070",
  "600": "#5c5d73",
};
export const GRAY_RGB: RGBColorMap = {
  "400": [185, 185, 185],
  "500": [112, 112, 112],
  "600": [92, 93, 115],
};

export const BG_COLOR: HexCodeColorMap = {
  MAIN: PRIMARY[900],
  PRIMARY: PRIMARY[800],
  PRIMARY_SEMILIGHT: PRIMARY[750],
  PRIMARY_LIGHT: PRIMARY[700],
  PRIMARY_LIGHTER: PRIMARY[600],
};
export const BG_COLOR_RGB: RGBColorMap = {
  MAIN: PRIMARY_RGB[900],
  PRIMARY: PRIMARY_RGB[800],
  PRIMARY_SEMILIGHT: PRIMARY_RGB[750],
  PRIMARY_LIGHT: PRIMARY_RGB[700],
  PRIMARY_LIGHTER: PRIMARY_RGB[600],
};

export const BORDER_COLOR: HexCodeColorMap = {
  GRAY_LIGHT: GRAY[400],
  PRIMARY_LIGHT: PRIMARY[400],
};
export const BORDER_COLOR_RGB: RGBColorMap = {
  GRAY_LIGHT: GRAY_RGB[400],
  PRIMARY_LIGHT: PRIMARY_RGB[400],
};

/* Control */
export const BLEND_RANGE_COLOR = {LEFT: "#2D92E5", RIGHT: "#F59149"};
export const DEFAULT_RANGE_COLOR = {LEFT: PRIMARY[400], RIGHT: PRIMARY[600]};

const COLORMAP_RGB = [
  [0, 0, 4], [1, 0, 5], [1, 1, 6], [1, 1, 8], [2, 1, 10], [2, 2, 12], [2, 2, 14], [3, 2, 16], [4, 3, 18], [4, 3, 21],
  [5, 4, 23], [6, 4, 25], [7, 5, 27], [8, 6, 29], [9, 6, 32], [10, 7, 34], [11, 7, 36], [12, 8, 38], [13, 8, 41], [14, 9, 43],
  [16, 9, 45], [17, 10, 48], [18, 10, 50], [20, 11, 53], [21, 11, 55], [22, 11, 58], [24, 12, 60], [25, 12, 62], [27, 12, 65], [28, 12, 67],
  [30, 12, 70], [31, 12, 72], [33, 12, 74], [35, 12, 77], [36, 12, 79], [38, 12, 81], [40, 11, 83], [42, 11, 85], [43, 11, 87], [45, 11, 89],
  [47, 10, 91], [49, 10, 93], [51, 10, 94], [52, 10, 96], [54, 9, 97], [56, 9, 98], [58, 9, 99], [59, 9, 100], [61, 9, 101], [63, 9, 102],
  [64, 10, 103], [66, 10, 104], [68, 10, 105], [69, 10, 105], [71, 11, 106], [73, 11, 107], [74, 12, 107], [76, 12, 108], [78, 13, 108], [79, 13, 108],
  [81, 14, 109], [83, 14, 109], [84, 15, 109], [86, 15, 110], [87, 16, 110], [89, 17, 110], [91, 17, 110], [92, 18, 110], [94, 18, 111], [95, 19, 111],
  [97, 20, 111], [99, 20, 111], [100, 21, 111], [102, 21, 111], [103, 22, 111], [105, 23, 111], [107, 23, 111], [108, 24, 111], [110, 24, 111], [111, 25, 111],
  [113, 25, 110], [115, 26, 110], [116, 27, 110], [118, 27, 110], [119, 28, 110], [121, 28, 110], [123, 29, 109], [124, 29, 109], [126, 30, 109], [127, 31, 109],
  [129, 31, 108], [130, 32, 108], [132, 32, 108], [134, 33, 107], [135, 33, 107], [137, 34, 107], [138, 34, 106], [140, 35, 106], [142, 36, 105], [143, 36, 105],
  [145, 37, 105], [146, 37, 104], [148, 38, 104], [150, 38, 103], [151, 39, 102], [153, 40, 102], [154, 40, 101], [156, 41, 101], [158, 41, 100], [159, 42, 100],
  [161, 42, 99], [162, 43, 98], [164, 43, 97], [165, 44, 96], [167, 45, 95], [169, 45, 94], [170, 46, 93], [172, 46, 92], [173, 47, 91], [175, 48, 90],
  [176, 48, 89], [178, 49, 88], [179, 49, 87], [181, 50, 86], [182, 51, 85], [184, 51, 84], [185, 52, 83], [187, 53, 82], [188, 54, 81], [190, 54, 80],
  [191, 55, 79], [193, 56, 78], [194, 57, 77], [196, 58, 76], [197, 59, 75], [198, 60, 74], [200, 60, 72], [201, 61, 71], [203, 62, 70], [204, 63, 69],
  [205, 64, 68], [207, 65, 67], [208, 66, 66], [209, 67, 65], [211, 68, 64], [212, 69, 62], [213, 70, 61], [214, 72, 60], [216, 73, 59], [217, 74, 58],
  [218, 75, 57], [219, 76, 56], [220, 77, 54], [221, 79, 53], [223, 80, 52], [224, 81, 51], [225, 82, 50], [226, 84, 48], [227, 85, 47], [228, 86, 46],
  [229, 88, 45], [230, 89, 43], [231, 90, 42], [232, 92, 41], [233, 93, 40], [234, 95, 38], [235, 96, 37], [235, 98, 36], [236, 99, 35], [237, 101, 33],
  [238, 102, 32], [239, 104, 31], [240, 105, 30], [240, 107, 28], [241, 109, 27], [242, 110, 26], [242, 112, 24], [243, 113, 23], [244, 115, 22], [244, 117, 20],
  [245, 118, 19], [246, 120, 18], [246, 122, 16], [247, 123, 15], [247, 125, 14], [248, 127, 12], [248, 129, 11], [249, 130, 10], [249, 132, 9], [249, 134, 7],
  [250, 136, 6], [250, 137, 6], [250, 139, 6], [251, 141, 6], [251, 143, 6], [251, 145, 6], [252, 146, 6], [252, 148, 6], [252, 150, 6], [252, 152, 6],
  [253, 154, 7], [253, 156, 7], [253, 158, 7], [253, 160, 7], [253, 161, 7], [253, 163, 7], [253, 165, 7], [253, 167, 7], [253, 169, 7], [253, 171, 7],
  [253, 173, 7], [253, 175, 7], [253, 177, 7], [253, 179, 7], [252, 181, 7], [252, 183, 7], [252, 185, 7], [252, 186, 7], [252, 188, 7], [251, 190, 7],
  [251, 192, 7], [251, 194, 7], [251, 196, 7], [250, 198, 7], [250, 200, 7], [250, 202, 7], [249, 204, 7], [249, 206, 7], [248, 208, 7], [248, 210, 7],
  [247, 212, 7], [247, 214, 7], [246, 216, 7], [246, 218, 7], [245, 220, 7], [245, 222, 7], [244, 224, 7], [244, 226, 7], [244, 228, 7], [243, 229, 7],
  [243, 231, 7], [243, 233, 7], [242, 235, 7], [242, 237, 7], [242, 238, 7], [243, 240, 7], [243, 241, 7], [244, 243, 7], [244, 244, 7], [245, 246, 7],
  [246, 247, 7], [247, 249, 7], [249, 250, 7], [250, 251, 7], [251, 253, 7], [253, 254, 7], [253, 255, 7], [253, 255, 7], [253, 255, 7], [253, 255, 7], [255, 255, 255]
]; // prettier-ignore

const colormapRGBA = new Uint8Array(256 * 4);
COLORMAP_RGB.forEach(([r, g, b], i) => {
  const o = i * 4;
  colormapRGBA[o] = r;
  colormapRGBA[o + 1] = g;
  colormapRGBA[o + 2] = b;
  colormapRGBA[o + 3] = 255; // opaque
});

export const COLORMAP_RGBA = colormapRGBA;
